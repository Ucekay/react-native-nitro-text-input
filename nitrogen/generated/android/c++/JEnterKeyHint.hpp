///
/// JEnterKeyHint.hpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#pragma once

#include <fbjni/fbjni.h>
#include "EnterKeyHint.hpp"

namespace margelo::nitro::nitrotextinput {

  using namespace facebook;

  /**
   * The C++ JNI bridge between the C++ enum "EnterKeyHint" and the the Kotlin enum "EnterKeyHint".
   */
  struct JEnterKeyHint final: public jni::JavaClass<JEnterKeyHint> {
  public:
    static auto constexpr kJavaDescriptor = "Lcom/margelo/nitro/nitrotextinput/EnterKeyHint;";

  public:
    /**
     * Convert this Java/Kotlin-based enum to the C++ enum EnterKeyHint.
     */
    [[maybe_unused]]
    [[nodiscard]]
    EnterKeyHint toCpp() const {
      static const auto clazz = javaClassStatic();
      static const auto fieldOrdinal = clazz->getField<int>("value");
      int ordinal = this->getFieldValue(fieldOrdinal);
      return static_cast<EnterKeyHint>(ordinal);
    }

  public:
    /**
     * Create a Java/Kotlin-based enum with the given C++ enum's value.
     */
    [[maybe_unused]]
    static jni::alias_ref<JEnterKeyHint> fromCpp(EnterKeyHint value) {
      static const auto clazz = javaClassStatic();
      static const auto fieldGO = clazz->getStaticField<JEnterKeyHint>("GO");
      static const auto fieldGOOGLE = clazz->getStaticField<JEnterKeyHint>("GOOGLE");
      static const auto fieldJOIN = clazz->getStaticField<JEnterKeyHint>("JOIN");
      static const auto fieldNEXT = clazz->getStaticField<JEnterKeyHint>("NEXT");
      static const auto fieldROUTE = clazz->getStaticField<JEnterKeyHint>("ROUTE");
      static const auto fieldSEARCH = clazz->getStaticField<JEnterKeyHint>("SEARCH");
      static const auto fieldSEND = clazz->getStaticField<JEnterKeyHint>("SEND");
      static const auto fieldYAHOO = clazz->getStaticField<JEnterKeyHint>("YAHOO");
      static const auto fieldDONE = clazz->getStaticField<JEnterKeyHint>("DONE");
      static const auto fieldEMERGENCY_CALL = clazz->getStaticField<JEnterKeyHint>("EMERGENCY_CALL");
      static const auto fieldCONTINUE = clazz->getStaticField<JEnterKeyHint>("CONTINUE");
      
      switch (value) {
        case EnterKeyHint::GO:
          return clazz->getStaticFieldValue(fieldGO);
        case EnterKeyHint::GOOGLE:
          return clazz->getStaticFieldValue(fieldGOOGLE);
        case EnterKeyHint::JOIN:
          return clazz->getStaticFieldValue(fieldJOIN);
        case EnterKeyHint::NEXT:
          return clazz->getStaticFieldValue(fieldNEXT);
        case EnterKeyHint::ROUTE:
          return clazz->getStaticFieldValue(fieldROUTE);
        case EnterKeyHint::SEARCH:
          return clazz->getStaticFieldValue(fieldSEARCH);
        case EnterKeyHint::SEND:
          return clazz->getStaticFieldValue(fieldSEND);
        case EnterKeyHint::YAHOO:
          return clazz->getStaticFieldValue(fieldYAHOO);
        case EnterKeyHint::DONE:
          return clazz->getStaticFieldValue(fieldDONE);
        case EnterKeyHint::EMERGENCY_CALL:
          return clazz->getStaticFieldValue(fieldEMERGENCY_CALL);
        case EnterKeyHint::CONTINUE:
          return clazz->getStaticFieldValue(fieldCONTINUE);
        default:
          std::string stringValue = std::to_string(static_cast<int>(value));
          throw std::invalid_argument("Invalid enum value (" + stringValue + "!");
      }
    }
  };

} // namespace margelo::nitro::nitrotextinput
