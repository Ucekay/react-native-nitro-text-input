///
/// KeyboardType.swift
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

/**
 * Represents the JS union `KeyboardType`, backed by a C++ enum.
 */
public typealias KeyboardType = margelo.nitro.nitrotextinput.KeyboardType

public extension KeyboardType {
  /**
   * Get a KeyboardType for the given String value, or
   * return `nil` if the given value was invalid/unknown.
   */
  init?(fromString string: String) {
    switch string {
      case "url":
        self = .url
      case "email-address":
        self = .emailAddress
      case "default":
        self = .default
      case "ascii-capable":
        self = .asciiCapable
      case "numbers-and-punctuation":
        self = .numbersAndPunctuation
      case "number-pad":
        self = .numberPad
      case "phone-pad":
        self = .phonePad
      case "name-phone-pad":
        self = .namePhonePad
      case "decimal-pad":
        self = .decimalPad
      case "twitter":
        self = .twitter
      case "web-search":
        self = .webSearch
      case "ascii-capable-number-pad":
        self = .asciiCapableNumberPad
      default:
        return nil
    }
  }

  /**
   * Get the String value this KeyboardType represents.
   */
  var stringValue: String {
    switch self {
      case .url:
        return "url"
      case .emailAddress:
        return "email-address"
      case .default:
        return "default"
      case .asciiCapable:
        return "ascii-capable"
      case .numbersAndPunctuation:
        return "numbers-and-punctuation"
      case .numberPad:
        return "number-pad"
      case .phonePad:
        return "phone-pad"
      case .namePhonePad:
        return "name-phone-pad"
      case .decimalPad:
        return "decimal-pad"
      case .twitter:
        return "twitter"
      case .webSearch:
        return "web-search"
      case .asciiCapableNumberPad:
        return "ascii-capable-number-pad"
    }
  }
}
