---
alwaysApply: true
description: 'Implementation process guidelines for react-native-nitro-text-input'
---

# 実装プロセスガイドライン

各機能の実装時には以下の手順を必ず遵守する：

## 1. 事前準備

### ブランチ作成

- ベースブランチ：`next`
- ブランチ命名：`feat/{機能名}`（例：`feat/on-focus`）
- 機能名はキャメルケースで統一

### 仕様調査

- `@react-native/` のiOS実装を徹底的に確認
- 特に以下の点を調査：
  - イベントの発火タイミング
  - 渡されるパラメータの構造
  - エラーハンドリング
  - パフォーマンス特性

## 2. 仕様書作成

### 必須記載事項

- イベント名と機能概要
- 発火条件とタイミング
- パラメータの型定義
- 期待される動作
- エッジケースの処理

### 仕様書テンプレート

```
# {機能名} 実装仕様書

## 概要
{機能の簡単な説明}

## イベント仕様
- イベント名：{イベント名}
- 発火タイミング：{タイミングの詳細}
- パラメータ：{パラメータの構造}

## 実装詳細
- UIKitコンポーネント：{使用するコンポーネント}
- デリゲートメソッド：{実装するメソッド}
- データ変換：{JSとネイティブ間の変換}

## テストケース
- {テストケース1}
- {テストケース2}
```

## 3. 実装

### 基本原則

- **iOSのみ**の実装（Androidは未対応）
- **UIKit**を使用したネイティブ実装
- `@react-native/` の動作と**完全な互換性**を維持

### コーディング規約

- Swiftのベストプラクティスに従う
- 既存のコードスタイルを維持
- 適切なエラーハンドリングを実装
- パフォーマンスを考慮した実装

## 4. テスト

### 必須チェック項目

- 基本動作の確認
- エッジケースのテスト
- パフォーマンス影響の確認
- `@react-native/` との動作比較

## 5. PR作成

### PRタイトル

```
feat: Implement {機能名} event handler

- Add {機能名} callback support
- Compatible with React Native's {機能名} behavior
```

### PR説明

- 実装した機能の詳細説明
- 仕様書の参照
- テスト結果の記載
- 破壊的変更の有無
